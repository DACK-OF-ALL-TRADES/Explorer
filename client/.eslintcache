[{"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\index.js":"1","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\App.js":"2","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\reportWebVitals.js":"3","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Enter page\\Login.js":"4","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\Asia.js":"5","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Enter page\\Signup.js":"6","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\Africa.js":"7","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\NorthAmerica.js":"8","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\SouthAmerica.js":"9","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\Europe.js":"10","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\Oceania.js":"11","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Home page\\index.js":"12","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Profile page\\index.js":"13","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Cities Page\\index.js":"14","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Enter page\\Background.js":"15","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\mutations.js":"16","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\auth.js":"17","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\CityResult Page\\index.js":"18","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\cities.js":"19","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\queries.js":"20","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Home page\\Head.js":"21","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Profile page\\EditProfileModal.js":"22","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Home page\\Body.js":"23","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Profile page\\Header.js":"24","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\components\\Footer\\index.js":"25","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\components\\Navbar\\index.js":"26","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\yelp-api\\useBusinessSearch.js":"27","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\components\\Map\\Map.js":"28","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\yelp-api\\api.js":"29","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\yelp-api\\config.js":"30","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Profile page\\CityCards.js":"31","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\MyFavorites\\index.js":"32","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\index.js":"33","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Top10\\index.js":"34","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Landing Page\\main.js":"35","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\NotFound\\index.js":"36"},{"size":271,"mtime":1627627134776,"results":"37","hashOfConfig":"38"},{"size":3722,"mtime":1628191901264,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1626821496459,"results":"40","hashOfConfig":"38"},{"size":5860,"mtime":1628219713980,"results":"41","hashOfConfig":"38"},{"size":1042,"mtime":1628023236711,"results":"42","hashOfConfig":"38"},{"size":7689,"mtime":1628094603327,"results":"43","hashOfConfig":"38"},{"size":1050,"mtime":1628023215672,"results":"44","hashOfConfig":"38"},{"size":1076,"mtime":1628023246995,"results":"45","hashOfConfig":"38"},{"size":1076,"mtime":1628023252499,"results":"46","hashOfConfig":"38"},{"size":1050,"mtime":1628023243547,"results":"47","hashOfConfig":"38"},{"size":1054,"mtime":1628023249811,"results":"48","hashOfConfig":"38"},{"size":773,"mtime":1628198325900,"results":"49","hashOfConfig":"38"},{"size":511,"mtime":1628193986082,"results":"50","hashOfConfig":"38"},{"size":2784,"mtime":1628202112202,"results":"51","hashOfConfig":"38"},{"size":275,"mtime":1627616681855,"results":"52","hashOfConfig":"38"},{"size":1426,"mtime":1628257247011,"results":"53","hashOfConfig":"38"},{"size":1047,"mtime":1627619646484,"results":"54","hashOfConfig":"38"},{"size":11270,"mtime":1628219701116,"results":"55","hashOfConfig":"38"},{"size":35157,"mtime":1628220237816,"results":"56","hashOfConfig":"38"},{"size":459,"mtime":1628212035659,"results":"57","hashOfConfig":"38"},{"size":11286,"mtime":1628191559998,"results":"58","hashOfConfig":"38"},{"size":8223,"mtime":1628260363760,"results":"59","hashOfConfig":"38"},{"size":31923,"mtime":1628107482376,"results":"60","hashOfConfig":"38"},{"size":3146,"mtime":1628202905907,"results":"61","hashOfConfig":"38"},{"size":3920,"mtime":1628025035527,"results":"62","hashOfConfig":"38"},{"size":1429,"mtime":1628194501347,"results":"63","hashOfConfig":"38"},{"size":819,"mtime":1627781481448,"results":"64","hashOfConfig":"38"},{"size":1186,"mtime":1628174643226,"results":"65","hashOfConfig":"38"},{"size":395,"mtime":1628095595532,"results":"66","hashOfConfig":"38"},{"size":249,"mtime":1628102377897,"results":"67","hashOfConfig":"38"},{"size":162,"mtime":1628188801120,"results":"68","hashOfConfig":"38"},{"size":3042,"mtime":1628218540834,"results":"69","hashOfConfig":"38"},{"size":1924,"mtime":1628179216843,"results":"70","hashOfConfig":"38"},{"size":1454,"mtime":1628177775182,"results":"71","hashOfConfig":"38"},{"size":1611,"mtime":1628190435139,"results":"72","hashOfConfig":"38"},{"size":870,"mtime":1628192195168,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"aj2vaz",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\index.js",[],["148","149"],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\App.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\reportWebVitals.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Enter page\\Login.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\Asia.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Enter page\\Signup.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\Africa.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\NorthAmerica.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\SouthAmerica.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\Europe.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\Oceania.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Home page\\index.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Profile page\\index.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Cities Page\\index.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Enter page\\Background.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\mutations.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\auth.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\CityResult Page\\index.js",["150"],"import React, { useState, useEffect } from \"react\";\nimport Nav from \"../../components/Navbar\";\nimport Footer from \"../../components/Footer\";\nimport cityData from \"../../utils/cities\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { useBusinessSearch } from \"../../utils/yelp-api/useBusinessSearch\";\nimport \"./cityResult.css\";\nimport {\n  Grid,\n  Card,\n  Image,\n  Icon,\n  Rating,\n  Container,\n  Button,\n  Label,\n  Modal,\n  Header,\n} from \"semantic-ui-react\";\nimport Map from \"../../components/Map/Map\";\nimport { ADD_FAVORITE_CITY } from \"../../utils/mutations\";\nimport { QUERY_ME } from \"../../utils/queries\";\n\nconst CityResult = () => {\n  const [open, setOpen] = React.useState(false);\n  let singleCity;\n  let cityName = \"\";\n  let cityID = window.location.pathname.split(\"/\").pop();\n  cityData.forEach((data) => {\n    if (data.id === parseInt(cityID)) {\n      singleCity = data;\n      cityName = data.city;\n    }\n  });\n  // // Yelp Fetch API\n  const term = \"Events\";\n  const locationParam = cityName;\n  const [businesses] = useBusinessSearch(term, locationParam);\n  // console.log(businesses);\n\n  // API FETCH........................................................\n  const [cityWeatherData, setcityWeatherData] = useState();\n  const [cityCovidData, setCityCovidData] = useState();\n  useEffect(() => {\n    if (process.env.REACT_APP_API_KEY) {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&appid=${process.env.REACT_APP_API_KEY}`\n      )\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            setcityWeatherData(result);\n            // console.log(cityWeatherData);\n          },\n          (error) => {\n            console.error(error);\n            if (error.code === \"LOCATION_NOT_FOUND\") {\n              return null;\n            }\n          }\n        );\n    }\n    fetch(`https://api.quarantine.country/api/v1/summary/latest`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          getCovidCity(result);\n        },\n        (error) => {\n          console.error(error);\n        }\n      );\n  }, []);\n  const getCovidCity = (covid) => {\n    const cData = covid.data.regions;\n    if (covid !== undefined) {\n      for (const prop in cData) {\n        if (cData[prop].name === singleCity.country) {\n          setCityCovidData(cData[prop]);\n          // console.log(cityCovidData);\n        }\n      }\n    }\n  };\n\n  const { data } = useQuery(QUERY_ME);\n  const user = data?.me || [];\n  //\n  // const [favorite, setFavorite] = useState([]);\n  //\n  const [saveCity] = useMutation(ADD_FAVORITE_CITY, {\n    update(cache, { data: { favorites } }) {\n      try {\n        const { me } = cache.readQuery({ query: QUERY_ME });\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: { favorites, ...me } },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me.favorites } },\n      });\n    },\n  });\n  //\n  const addFavorite = async () => {\n    // console.log(user.favorites);\n    if (user.favorites.includes(cityID)) {\n      setOpen(true);\n    } else {\n      try {\n        await saveCity({\n          variables: { cityID: cityID },\n        });\n        alert(`Added ${cityName} to my favorites!`);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Nav />\n      <div className=\"citypage\">\n        <div className=\"citypage-intro\">\n          <Grid stackable divided=\"vertically\">\n            <Grid.Row columns={2}>\n              <Grid.Column>\n                <img\n                  src={singleCity.image}\n                  alt=\"City\"\n                  className=\"citypage-cityimage\"\n                />\n                <Button\n                  style={{ marginTop: \"2rem\" }}\n                  as=\"div\"\n                  labelPosition=\"right\"\n                  onClick={addFavorite}\n                >\n                  {/* HEREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE */}\n                  <Button color=\"red\">\n                    <Icon name=\"favorite\" />\n                    Add to favorites\n                  </Button>\n                  <Label as=\"a\" basic color=\"red\" pointing=\"left\">\n                    {user.favorites ? user.favorites.length : \"\"}\n                  </Label>\n                </Button>\n              </Grid.Column>\n              <Grid.Column textAlign=\"center\">\n                <h1>{singleCity.city}</h1>\n                <h3>\n                  <Icon name=\"map marker alternate\" />\n                  {singleCity.country}\n                </h3>\n                {cityWeatherData === undefined ||\n                cityWeatherData.main === undefined ? (\n                  \"\"\n                ) : (\n                  <div className=\"city-weather\">\n                    <Card color=\"teal\">\n                      <Card.Content>\n                        <Card.Header className=\"weather-title\">\n                          Current Temp: {parseInt(cityWeatherData.main.temp)}\n                          <sup>&#8451;</sup>\n                          <img\n                            src={`http://openweathermap.org/img/wn/${cityWeatherData.weather[0].icon}.png`}\n                            width=\"50\"\n                            height=\"50\"\n                            alt=\"logo\"\n                          />\n                        </Card.Header>\n                        <Card.Meta>\n                          Feels Like:{\" \"}\n                          {parseInt(cityWeatherData.main.feels_like)}\n                          <sup>&#8451;</sup>\n                        </Card.Meta>\n                        <Card.Description>\n                          <div style={{ float: \"left\" }}>\n                            Max Temp: {parseInt(cityWeatherData.main.temp_max)}\n                            <sup>&#8451;</sup>\n                            <p>Humidity: {cityWeatherData.main.humidity}%</p>\n                          </div>\n                          <div>\n                            Min Temp: {parseInt(cityWeatherData.main.temp_min)}\n                            <sup>&#8451;</sup>\n                            <p>Wind Speed: {cityWeatherData.wind.speed}m/s</p>\n                          </div>\n                        </Card.Description>\n                      </Card.Content>\n                    </Card>\n                  </div>\n                )}\n                {cityCovidData !== undefined && (\n                  <Card color=\"teal\" centered>\n                    <Card.Content>\n                      <Card.Header>Covid Cases</Card.Header>\n                      <Card.Meta>{singleCity.country}</Card.Meta>\n                      <Card.Description textAlign=\"left\">\n                        <b>\n                          <Icon name=\"heartbeat\" />\n                          Deaths today:\n                          {cityCovidData.change.deaths} <br />\n                          <br />\n                          <Icon name=\"meh\" />\n                          Active cases:\n                          {cityCovidData.change.active_cases}\n                        </b>\n                      </Card.Description>\n                    </Card.Content>\n                  </Card>\n                )}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n        <Container>\n          <Grid stackable divided=\"vertically\" className=\"city-video-container\">\n            <Grid.Row columns={2}>\n              <Grid.Column>\n                <div>\n                  <Map />\n                </div>\n              </Grid.Column>\n              <Grid.Column>\n                <div className=\"video-responsive\">\n                  <iframe\n                    width=\"853\"\n                    height=\"480\"\n                    src={`https://www.youtube.com/embed/${singleCity.youtube}`}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    title=\"Embedded youtube\"\n                  />\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n        <div className=\"title-hotel\">\n          <h1>Hotels</h1>\n        </div>\n        <div className=\"city-hotel-cards\">\n          <Card.Group centered>\n            {businesses === undefined && (\n              <div>\n                <h3>Couldn't get any information about this city</h3>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <img\n                    alt=\"city not found...\"\n                    width=\"100%\"\n                    height=\"auto\"\n                    src=\"https://media.giphy.com/media/hPSMHzgHQeFuE/giphy.gif\"\n                  />\n                </div>\n              </div>\n            )}\n            {businesses !== undefined &&\n              businesses\n                .filter((item, index) => index < 10)\n                .map((business) => (\n                  <Card color=\"blue\" key={business.name} href={business.url}>\n                    {business.image_url === \"\" ? (\n                      <Image\n                        className=\"hotel-img\"\n                        src=\"https://img2.10bestmedia.com/Images/Photos/378649/Park-Hyatt-New-York-Manhattan-Sky-Suite-Master-Bedroom-low-res_54_990x660.jpg\"\n                      />\n                    ) : (\n                      <Image className=\"hotel-img\" src={business.image_url} />\n                    )}\n                    <Card.Content>\n                      <Card.Header>{business.name}</Card.Header>\n                      <Card.Meta>Tel: {business.display_phone}</Card.Meta>\n                      <Card.Description>\n                        <p>Address:</p>\n                        <small>{business.location.address1}</small>\n                        <small>{business.location.address2}</small>\n                        <small>{business.location.address3}</small>\n                      </Card.Description>\n                    </Card.Content>\n                    <Card.Content extra>\n                      <Rating\n                        maxRating={5}\n                        defaultRating={business.rating}\n                        icon=\"star\"\n                        disabled\n                      />\n                    </Card.Content>\n                  </Card>\n                ))}\n          </Card.Group>\n        </div>\n        <Modal\n          basic\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n          open={open}\n          size=\"small\"\n        >\n          <Header icon>\n            <Icon name=\"warning\" />\n            Already have that city in My Favorites\n          </Header>\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={() => setOpen(false)}>\n              <Icon name=\"checkmark\" /> OK\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default CityResult;\n","C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\cities.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\queries.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Home page\\Head.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Profile page\\EditProfileModal.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Home page\\Body.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Profile page\\Header.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\components\\Navbar\\index.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\yelp-api\\useBusinessSearch.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\components\\Map\\Map.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\yelp-api\\api.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\utils\\yelp-api\\config.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Profile page\\CityCards.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\MyFavorites\\index.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Continents\\index.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Top10\\index.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\Landing Page\\main.js",[],"C:\\Users\\kemal\\Desktop\\code\\_repositories\\explorer\\client\\src\\pages\\NotFound\\index.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":73,"column":6,"nodeType":"157","endLine":73,"endColumn":8,"suggestions":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cityName' and 'getCovidCity'. Either include them or remove the dependency array.","ArrayExpression",["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [cityName, getCovidCity]",{"range":"164","text":"165"},[2112,2114],"[cityName, getCovidCity]"]